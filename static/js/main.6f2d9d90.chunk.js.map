{"version":3,"sources":["components/NewTodo/NewTodo.js","components/TodoItem/TodoItem.js","components/FilterItem/FilterItem.js","App.js","index.js"],"names":["NewTodo","state","inputNewTodoValue","addTodo","event","addTodoToData","_this","props","preventDefault","setState","onChangeInputNewTodo","_ref","value","target","this","react_default","a","createElement","onSubmit","onChange","type","className","placeholder","autoFocus","React","Component","TodoItem","isTodoEditing","todo","title","editTodoId","showTodoEditForm","onChangeInputEditTodo","_ref$target","todoId","dataset","onKeyPressed","key","editTodo","_this$state","editTodoInData","_this$props","_this$props$todo","id","completed","deleteTodoFromData","changeTodoCompleteStatus","_this$state2","itemClass","createClass","data-todo-id","concat","checked","onBlur","onKeyDown","Fragment","htmlFor","onClick","onDoubleClick","FilterItem","href","dataFilter","anchor","filter","linkOfFilterClass","selected","data-filter","App","todos","filteredTodos","idCount","isAllTodosCompleted","changeFilter","filterTodos","prevState","newFilteredTodos","Object","toConsumableArray","checkIsAllTodosCompleted","every","map","Number","_objectSpread","indexTodoInArray","findIndex","splice","deleteAllCompletedTodoFromData","reduce","acc","_ref2","changeTodosCompleteStatus","countActiveTodos","length","findSomeCompleteTodo","some","_this2","activeTodosLeft","isSomeTodoComplete","components_NewTodo_NewTodo","components_TodoItem_TodoItem","components_FilterItem_FilterItem","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6f2d9d90.chunk.js","sourcesContent":["import React from 'react';\n\nclass NewTodo extends React.Component {\n  state = {\n    inputNewTodoValue: '',\n  }\n\n  addTodo = (event) => {\n    const { addTodoToData } = this.props;\n    const { inputNewTodoValue } = this.state;\n\n    event.preventDefault();\n    \n    if (inputNewTodoValue) {\n      addTodoToData(inputNewTodoValue);\n      this.setState({\n        inputNewTodoValue: '',\n      });\n    }\n  }\n\n  onChangeInputNewTodo = ({ target: { value } }) => {\n    this.setState({\n      inputNewTodoValue: value,\n    });\n  }\n\n  render() {\n    const { inputNewTodoValue } = this.state;\n\n\n    return (\n      <form onSubmit={this.addTodo}>\n        <input\n          value={inputNewTodoValue}\n          onChange={this.onChangeInputNewTodo}\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          autoFocus\n        />\n      </form>\n    );\n  }\n}\n\nexport default NewTodo;\n","import React from 'react';\nimport createClass from 'classnames';\n\nclass TodoItem extends React.Component {\n  state = {\n    isTodoEditing: false,\n    inputNewTodoValue: this.props.todo.title,\n    editTodoId: null,\n  }\n\n  showTodoEditForm = () => {\n    this.setState({\n      isTodoEditing: true,\n    });\n  }\n\n  onChangeInputEditTodo = ({\n    target: {\n      value,\n      dataset: {\n        todoId,\n      }\n    }\n  }) => {\n    this.setState({\n      inputNewTodoValue: value,\n      editTodoId: todoId,\n    });\n  }\n\n  onKeyPressed = (event) => {\n    if (event.key === \"Escape\" || event.key === \"Esc\") {\n      this.editTodo(event);\n    }\n  }\n\n  editTodo = (event) => {\n    event.preventDefault();\n    const { inputNewTodoValue, editTodoId } = this.state;\n\n    if (editTodoId) {\n      this.props.editTodoInData(editTodoId, inputNewTodoValue);\n    }\n\n    this.setState({\n      isTodoEditing: false,\n      editTodoId: null,\n    });\n  }\n\n  render() {\n    const {\n      todo: {\n        id,\n        title,\n        completed\n      },\n      deleteTodoFromData,\n      changeTodoCompleteStatus\n    } = this.props;\n\n    const { isTodoEditing, inputNewTodoValue } = this.state;\n    const itemClass = createClass({ 'completed': completed });\n\n    return (\n      <li className={itemClass}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            data-todo-id={`${id}`}\n            id={`todo-${id}`}\n            checked={completed}\n            onChange={changeTodoCompleteStatus}\n          />\n          {isTodoEditing\n            ?\n            <form onSubmit={this.editTodo}>\n              <input\n                type=\"text\"\n                className=\"new-todo\"\n                data-todo-id={`${id}`}\n                value={inputNewTodoValue}\n                onChange={this.onChangeInputEditTodo}\n                onBlur={this.editTodo}\n                onKeyDown={this.onKeyPressed}\n                autoFocus\n              />\n            </form>\n            :\n            <>\n              <label\n                htmlFor={`todo-${id}`}\n                onClick={(event) => event.preventDefault()}\n                onDoubleClick={this.showTodoEditForm}\n              >\n                {title}\n              </label>\n              <button\n                type=\"button\"\n                className=\"destroy\"\n                data-todo-id={`${id}`}\n                onClick={deleteTodoFromData}\n              />\n            </>\n          }\n        </div>\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React from 'react';\nimport createClass from 'classnames';\n\nconst FilterItem = ({\n  href,\n  dataFilter,\n  onClick,\n  anchor,\n  filter\n}) => {\n  const linkOfFilterClass = createClass({'selected': dataFilter === filter});\n\n  return (\n    <li>\n      <a\n        href={href}\n        data-filter={dataFilter}\n        className={linkOfFilterClass}\n        onClick={onClick}\n      >\n        {anchor}\n      </a>\n    </li>\n  );\n}\n\nexport default FilterItem;\n","import React from 'react';\n\nimport NewTodo from './components/NewTodo/NewTodo';\nimport TodoItem from './components/TodoItem/TodoItem';\nimport FilterItem from './components/FilterItem/FilterItem';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    filteredTodos: [],\n    idCount: 0,\n    filter: 'all',\n    isAllTodosCompleted: false,\n  }\n\n  changeFilter = (event) => {\n    const {\n      target: {\n        dataset: {\n          filter,\n        }\n      }\n    } = event;\n\n    event.preventDefault();\n\n    this.setState({\n      filter: filter,\n    });\n\n    this.filterTodos();\n  }\n\n  filterTodos = () => {\n    this.setState(prevState => {\n      let newFilteredTodos = [];\n      const { filter, todos } = prevState;\n\n      switch (filter) {\n        case 'active':\n          newFilteredTodos = todos.filter(todo => (\n            todo.completed === false\n          ));\n          break;\n        case 'completed':\n          newFilteredTodos = todos.filter(todo => (\n            todo.completed === true\n          ));\n          break;\n        default:\n          newFilteredTodos = todos;\n          break;\n      }\n\n      return ({\n        filteredTodos: newFilteredTodos,\n      });\n    });\n  }\n\n  addTodoToData = (inputNewTodoValue) => {\n    this.setState(prevState => ({\n      todos: [\n        ...prevState.todos,\n        {\n          id: prevState.idCount + 1,\n          title: inputNewTodoValue,\n          completed: false,\n        },\n      ],\n      idCount: ++prevState.idCount,\n    }));\n\n    this.checkIsAllTodosCompleted();\n    this.filterTodos();\n  }\n\n  checkIsAllTodosCompleted = () => {\n    this.setState(prevState => ({\n      isAllTodosCompleted: prevState.todos.every(todo => (\n        todo.completed === true\n      )),\n    }));\n  }\n\n  editTodoInData = (id, value) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => {\n        if (todo.id === Number(id)) {\n          return ({\n            ...todo,\n            title: value,\n          });\n        }\n\n        return todo;\n      }),\n    }));\n    this.filterTodos();\n  }\n\n  deleteTodoFromData = ({\n    target: {\n      dataset: {\n        todoId,\n      }\n    }\n  }) => {\n    this.setState(prevState => {\n      const indexTodoInArray = prevState.todos.findIndex(todo => (\n        todo.id === Number(todoId)\n      ));\n\n      prevState.todos.splice(indexTodoInArray, 1);\n\n      return ({\n        todos: prevState.todos,\n      });\n    });\n    this.checkIsAllTodosCompleted();\n    this.filterTodos();\n  }\n\n  deleteAllCompletedTodoFromData = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.reduce((acc, todo) => {\n        if (todo.completed === true) {\n          return [...acc];\n        }\n\n        return [...acc, todo,];\n      }, []),\n      isAllTodosCompleted: false,\n    }));\n    this.filterTodos();\n  }\n\n  changeTodoCompleteStatus = ({\n    target: {\n      dataset: {\n        todoId,\n      }\n    }\n  }) => {\n    this.setState(prevState => {\n      return ({\n        todos: prevState.todos.reduce((acc, todo) => {\n          if (todo.id === Number(todoId)) {\n            todo.completed = !(todo.completed);\n          }\n          return ([\n            ...acc,\n            todo,\n          ]);\n        }, []),\n      });\n    });\n\n    this.checkIsAllTodosCompleted();\n    this.filterTodos();\n  }\n\n  changeTodosCompleteStatus = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        completed: !(prevState.isAllTodosCompleted)\n      })),\n      isAllTodosCompleted: !(prevState.isAllTodosCompleted),\n    }));\n    this.filterTodos();\n  }\n\n  countActiveTodos = () => {\n    const { todos } = this.state;\n\n    return todos.filter(todo => (\n      todo.completed === false\n    ))\n      .length;\n  }\n\n  findSomeCompleteTodo = () => {\n    const { todos } = this.state;\n\n    return todos.some(todo => (\n      todo.completed === true\n    ));\n  }\n\n  render() {\n    const {\n      filteredTodos,\n      filter,\n      todos,\n      isAllTodosCompleted\n    } = this.state;\n\n    const activeTodosLeft = this.countActiveTodos();\n    const isSomeTodoComplete = this.findSomeCompleteTodo();\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo addTodoToData={this.addTodoToData} />\n        </header>\n        <section className=\"main\">\n          {!!(todos.length) &&\n            <>\n              <input\n                type=\"checkbox\"\n                id=\"toggle-all\"\n                className=\"toggle-all\"\n                onChange={this.changeTodosCompleteStatus}\n                checked={isAllTodosCompleted}\n              />\n              <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            </>\n          }\n          <ul className=\"todo-list\">\n            {filteredTodos.map(todo => (\n              <TodoItem\n                todo={todo}\n                deleteTodoFromData={this.deleteTodoFromData}\n                changeTodoCompleteStatus={this.changeTodoCompleteStatus}\n                editTodoInData={this.editTodoInData}\n                key={todo.id} />\n            ))}\n          </ul>\n        </section>\n\n        {!!(todos.length) &&\n          <footer className=\"footer\">\n            {!!activeTodosLeft &&\n              <span className=\"todo-count\">\n                {`${activeTodosLeft} item left`}\n              </span>\n            }\n\n            <ul className=\"filters\">\n              <FilterItem\n                href=\"#/\"\n                dataFilter=\"all\"\n                onClick={this.changeFilter}\n                anchor=\"All\"\n                filter={filter}\n              />\n\n              <FilterItem\n                href=\"#/active\"\n                dataFilter=\"active\"\n                onClick={this.changeFilter}\n                anchor=\"Active\"\n                filter={filter}\n              />\n\n              <FilterItem\n                href=\"#/completed\"\n                dataFilter=\"completed\"\n                onClick={this.changeFilter}\n                anchor=\"Completed\"\n                filter={filter}\n              />\n            </ul>\n            {isSomeTodoComplete &&\n              <button\n                type=\"button\"\n                className=\"clear-completed\"\n                onClick={this.deleteAllCompletedTodoFromData}\n              >\n                Clear completed\n              </button>\n            }\n          </footer>\n        }\n\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}